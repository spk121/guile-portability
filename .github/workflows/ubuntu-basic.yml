name: Guile Build & Test on Ubuntu Basic

on:
  # Trigger on push to main branch and pull requests
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  # Allow manual triggering
  workflow_dispatch:

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository and submodules
      uses: actions/checkout@v4
      with:
        submodules: true
        token: ${{ secrets.PAT_TOKEN }} # Need a token so I can push to submodule repo

    - name: Configure git bot account
      run: |
        # Configure git
        git config --global user.name "GitHub Action"
        git config --global user.email "action@github.com"
          
    # Need be at the HEAD of the badges repo so we can commit to it later.
    # Otherwise, the submodule would be in detached head state.
    - name: Update Submodule to HEAD
      run: |
        cd ./badges  # Enter the submodule directory
        git checkout master
        git pull origin master
        cd ..

    - name: Install packages
      run: |
        sudo apt-get update -qq &&
        sudo apt-get install -y -qq \
          texlive \
          texlive-plain-generic \
          texinfo \
          autoconf \
          libtool \
          gettext \
          autopoint \
          gperf \
          pkg-config \
          lzip \
          libgc-dev \
          libgmp-dev \
          libltdl-dev \
          libncurses5-dev \
          libreadline-dev \
          libunistring-dev \
          locales
        sudo locale-gen en_US.UTF-8
        sudo update-locale LANG=en_US.UTF-8
    - name: Configure
      run: |
        export LANG=C.UTF-8
        export TERM=dumb
        export VERBOSE=true
        export DEBIAN_FRONTEND=noninteractive
        export TZ=America/Los_Angeles
        export TOP="$(pwd)"
        set -e  # Exit on any error
        mkdir -p "$(pwd)/app" && \
        cd guile && \
        ./autogen.sh && \
        ./configure --enable-mini-gmp --with-threads=null --disable-lto --enable-jit=no --prefix="$(pwd)/app"

    - name: Build
      id: build
      run: |
        cd guile && \
        make -j$(nproc) V=1
      continue-on-error: true  # Need to continue to make a build failure badge

    - name: Handle Build Outcome
      run: |
        # Create the badge directory
        mkdir -p ./badges/${{ github.repository }}/${{ github.ref_name }}/

        # Generate badge based on build outcome
        if [ "${{ steps.build.outcome }}" == "success" ]; then
          bash ./verbose-waffle/scripts/basic.sh 'Ubuntu Basic' 'success' 'green' > ./badges/${{ github.repository }}/${{ github.ref_name }}/ubuntu-basic.svg.new
          COMMIT_MSG="Update Ubuntu Basic badge to success"
        else
          bash ./verbose-waffle/scripts/basic.sh 'Ubuntu Basic' 'failure' 'red' > ./badges/${{ github.repository }}/${{ github.ref_name }}/ubuntu-basic.svg.new
          COMMIT_MSG="Update Ubuntu Basic badge to failure"
        fi

        # Compare the new file with the existing one (if it exists)
        if [ -f ./badges/${{ github.repository }}/${{ github.ref_name }}/ubuntu-basic.svg ]; then
          if ! cmp -s ./badges/${{ github.repository }}/${{ github.ref_name }}/ubuntu-basic.svg ./badges/${{ github.repository }}/${{ github.ref_name }}/ubuntu-basic.svg.new; then
            mv ./badges/${{ github.repository }}/${{ github.ref_name }}/ubuntu-basic.svg.new ./badges/${{ github.repository }}/${{ github.ref_name }}/ubuntu-basic.svg
            cd ./badges
            git add ./${{ github.repository }}/${{ github.ref_name }}/ubuntu-basic.svg
            git commit -m "$COMMIT_MSG"
            git push origin master
          else
            echo "No changes detected in ubuntu-basic.svg, skipping commit."
            rm ./badges/${{ github.repository }}/${{ github.ref_name }}/ubuntu-basic.svg.new
          fi
        else
          mv ./badges/${{ github.repository }}/${{ github.ref_name }}/ubuntu-basic.svg.new ./badges/${{ github.repository }}/${{ github.ref_name }}/ubuntu-basic.svg
          cd ./badges
          git add ./${{ github.repository }}/${{ github.ref_name }}/ubuntu-basic.svg
          git commit -m "$COMMIT_MSG"
          git push origin master
        fi

        # Exit with failure if build failed
        if [ "${{ steps.build.outcome }}" != "success" ]; then
          exit 1
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Run Unit Tests
      id: check
      run: |
        cd guile && \
        make check V=1
      continue-on-error: true

    - name: Short report of unit tests
      run: |
        mkdir -p ./badges/${{ github.repository }}/${{ github.ref_name }}/
        if [ -f guile/check-guile.log ]; then
          cat guile/check-guile.log | tr -d '\0' | grep -A10 "Totals for this test run" | bash ./verbose-waffle/scripts/txt2svg.sh > ./badges/${{ github.repository }}/${{ github.ref_name }}/ubuntu-basic-check.svg.new
        else
          echo "Complete test failure" | bash ./verbose-waffle/scripts/txt2svg.sh > ./badges/${{ github.repository }}/${{ github.ref_name }}/ubuntu-basic-check.svg.new
        fi

        # Compare the new file with the existing one (if it exists)
        if [ -f ./badges/${{ github.repository }}/${{ github.ref_name }}/ubuntu-basic-check.svg ]; then
          if ! cmp -s ./badges/${{ github.repository }}/${{ github.ref_name }}/ubuntu-basic-check.svg ./badges/${{ github.repository }}/${{ github.ref_name }}/ubuntu-basic-check.svg.new; then
            mv ./badges/${{ github.repository }}/${{ github.ref_name }}/ubuntu-basic-check.svg.new ./badges/${{ github.repository }}/${{ github.ref_name }}/ubuntu-basic-check.svg
            cd ./badges
            git add ./${{ github.repository }}/${{ github.ref_name }}/ubuntu-basic-check.svg
            git commit -m "Update Ubuntu Basic badge with test results"
            git push origin master
          else
            echo "No changes detected in ubuntu-basic-check.svg, skipping commit."
            rm ./badges/${{ github.repository }}/${{ github.ref_name }}/ubuntu-basic-check.svg.new
          fi
        else
          mv ./badges/${{ github.repository }}/${{ github.ref_name }}/ubuntu-basic-check.svg.new ./badges/${{ github.repository }}/${{ github.ref_name }}/ubuntu-basic-check.svg
          cd ./badges
          git add ./${{ github.repository }}/${{ github.ref_name }}/ubuntu-basic-check.svg
          git commit -m "Update Ubuntu Basic badge with test results"
          git push origin master
        fi

    - name: Archive Test Logs
      uses: actions/upload-artifact@v4
      with:
        name: Test Logs
        path: ./guile/*.log

    - name: Late Quit
      if: ${{ steps.check.outcome != 'success' }}
      run: exit 1
