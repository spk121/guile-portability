name: MinGW

on:
  # Allow manual triggering
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - { sys: MINGW32, env: i686,         thread: --without-threads, jit: --enable-jit=no, gmp: --enable-mini-gmp }
          - { sys: UCRT64,  env: ucrt-x86_64,  thread: --without-threads, jit: --enable-jit=no,  gmp: --enable-mini-gmp }
          - { sys: MINGW32, env: i686,         thread: --with-threads, jit: --enable-jit=yes, gmp: --enable-mini-gmp }
          - { sys: UCRT64,  env: ucrt-x86_64,  thread: --with-threads, jit: --enable-jit=yes,  gmp: --enable-mini-gmp }

    runs-on: windows-latest
    name: Build ${{matrix.sys}} ${{matrix.env}} ${{matrix.thread}} ${{matrix.jit}} ${{matrix.gmp}}
    timeout-minutes: 150

    steps:
    - name: Set git to Linux line endings
      run: git config --global core.autocrlf input

    - name: Checkout repository and submodules
      uses: actions/checkout@v4

    - name: Install MSYS2
      uses: msys2/setup-msys2@v2
      with:
        msystem: ${{matrix.sys}}
        install: >-
          autotools
          base-devel
          mingw-w64-${{matrix.env}}-toolchain
          flex
          gperf
          lzip xz
          pkgconf
          mingw-w64-${{matrix.env}}-gettext
          mingw-w64-${{matrix.env}}-gmp
          mingw-w64-${{matrix.env}}-libffi
          mingw-w64-${{matrix.env}}-gc
          mingw-w64-${{matrix.env}}-libiconv
          mingw-w64-${{matrix.env}}-readline
          mingw-w64-${{matrix.env}}-libunistring
          texinfo

    - name: Git clone subprojects
      run: |
        git clone --branch staging --depth 1 https://github.com/spk121/guile.git

    - name: Configure
      run: |
        export LANG=C.UTF-8
        export TERM=dumb
        export VERBOSE=true
        export TZ=America/Los_Angeles
        cd guile
        ./autogen.sh
        ./configure CFLAGS="-g -O2 -Wall -fpermissive" ${{matrix.thread}} ${{matrix.jit}} ${{matrix.gmp}}
      shell: msys2 -o igncr '{0}'

    - name: Build
      run: |
        cd guile
        make -j4 V=1
      shell: msys2 -o igncr '{0}'

    - name: Check
      run: |
        cd guile
        make check -k V=1

    - name: Archive Test Logs
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: Test-Logs-${{ matrix.env }}-${{ matrix.thread }}-${{ matrix.jit }}-${{ matrix.gmp }}
        path: |
          guile/*.log
          guile/test-suite/tests/*.log
        if-no-files-found: warn
